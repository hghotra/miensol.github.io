{"version":3,"sources":["webpack:///./src/templates/category-template.tsx"],"names":["query","CategoryTemplate","data","pageContext","useSiteMetadata","siteTitle","title","siteSubtitle","subtitle","category","currentPage","prevPagePath","nextPagePath","hasPrevPage","hasNextPage","edges","allMarkdownRemark","pageTitle","description"],"mappings":"2FAAA,8IA+CaA,EAAQ,aA2BNC,UA1DU,SAAC,GAAiC,IAA/BC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAAyB,EACJC,cAAtCC,EAD0C,EACjDC,MAA4BC,EADqB,EAC/BC,SAD+B,EAUrDL,EANFM,EAJuD,EAIvDA,SACAC,EALuD,EAKvDA,YACAC,EANuD,EAMvDA,aACAC,EAPuD,EAOvDA,aACAC,EARuD,EAQvDA,YACAC,EATuD,EASvDA,YAGMC,EAAUb,EAAKc,kBAAfD,MACFE,EAAYP,EAAc,EAAOD,EAArB,WAAwCC,EAAxC,MAAyDL,EAAiBI,EAA1E,MAAwFJ,EAE1G,OACE,kBAAC,IAAD,CAAQC,MAAOW,EAAWC,YAAaX,GACrC,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMD,MAAOG,GACX,kBAAC,IAAD,CAAMM,MAAOA,IACb,kBAAC,IAAD,CACEJ,aAAcA,EACdC,aAAcA,EACdC,YAAaA,EACbC,YAAaA","file":"component---src-templates-category-template-tsx-9b2527fed1bbc12d167a.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Sidebar from '../components/Sidebar';\nimport Feed from '../components/Feed';\nimport Page from '../components/Page';\nimport Pagination from '../components/Pagination';\nimport { useSiteMetadata } from '../hooks';\nimport { RequiredNotNull } from \"../types\";\nimport { Query, SitePageContext } from \"../types/graphql\";\n\ntype Props = {\n  data: Pick<Query, 'allMarkdownRemark'>,\n  pageContext: SitePageContext\n};\n\nconst CategoryTemplate = ({ data, pageContext }: Props) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\n\n  const {\n    category,\n    currentPage,\n    prevPagePath,\n    nextPagePath,\n    hasPrevPage,\n    hasNextPage,\n  } = pageContext as RequiredNotNull<typeof pageContext>;\n\n  const { edges } = data.allMarkdownRemark;\n  const pageTitle = currentPage > 0 ? `${category} - Page ${currentPage} - ${siteTitle}` : `${category} - ${siteTitle}`;\n\n  return (\n    <Layout title={pageTitle} description={siteSubtitle}>\n      <Sidebar />\n      <Page title={category}>\n        <Feed edges={edges} />\n        <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        />\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query CategoryPage($category: String, $postsLimit: Int!, $postsOffset: Int!) {\n    allMarkdownRemark(\n        limit: $postsLimit,\n        skip: $postsOffset,\n        filter: { frontmatter: { category: { eq: $category }, template: { eq: \"post\" }, draft: { ne: true } } },\n        sort: { order: DESC, fields: [frontmatter___date] }\n      ){\n      edges {\n        node {\n          fields {\n            categorySlug\n            slug\n          }\n          excerpt(pruneLength: 320)\n          frontmatter {\n            date\n            description\n            category\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default CategoryTemplate;\n"],"sourceRoot":""}