{"version":3,"sources":["webpack:///./src/templates/index-template.tsx"],"names":["query","IndexTemplate","data","pageContext","useSiteMetadata","siteTitle","title","siteSubtitle","subtitle","currentPage","hasNextPage","hasPrevPage","prevPagePath","nextPagePath","edges","allMarkdownRemark","pageTitle","description","isIndex"],"mappings":"4FAAA,8IA+CaA,EAAQ,aA2BNC,UA1DO,SAAC,GAAiC,IAA/BC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAAyB,EACDC,cAAtCC,EADuC,EAC9CC,MAA4BC,EADkB,EAC5BC,SAD4B,EASlDL,EALFM,EAJoD,EAIpDA,YACAC,EALoD,EAKpDA,YACAC,EANoD,EAMpDA,YACAC,EAPoD,EAOpDA,aACAC,EARoD,EAQpDA,aAIMC,EAAUZ,EAAKa,kBAAfD,MACFE,EAAYP,EAAc,EAAd,gBAAkCA,EAAlC,MAAmDJ,EAAcA,EAEnF,OACE,kBAAC,IAAD,CAAQC,MAAOU,EAAWC,YAAaV,GACrC,kBAAC,IAAD,CAASW,SAAO,IAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMJ,MAAOA,IACb,kBAAC,IAAD,CACEF,aAAcA,EACdC,aAAcA,EACdF,YAAaA,EACbD,YAAaA","file":"component---src-templates-index-template-tsx-90ea64a37c4d7b280402.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Sidebar from '../components/Sidebar';\nimport Feed from '../components/Feed';\nimport Page from '../components/Page';\nimport Pagination from '../components/Pagination';\nimport { useSiteMetadata } from '../hooks';\nimport { RequiredNotNull } from \"../types\";\nimport { Query, SitePageContext } from \"../types/graphql\";\n\ntype Props = {\n  data: Query,\n  pageContext: SitePageContext\n};\n\nconst IndexTemplate = ({ data, pageContext }: Props) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\n\n  const {\n    currentPage,\n    hasNextPage,\n    hasPrevPage,\n    prevPagePath,\n    nextPagePath\n  } = pageContext as RequiredNotNull<typeof pageContext>;\n\n\n  const { edges } = data.allMarkdownRemark;\n  const pageTitle = currentPage > 0 ? `Posts - Page ${currentPage} - ${siteTitle}` : siteTitle;\n\n  return (\n    <Layout title={pageTitle} description={siteSubtitle}>\n      <Sidebar isIndex />\n      <Page>\n        <Feed edges={edges} />\n        <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        />\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query IndexTemplate($postsLimit: Int!, $postsOffset: Int!) {\n    allMarkdownRemark(\n        limit: $postsLimit,\n        skip: $postsOffset,\n        filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } },\n        sort: { order: DESC, fields: [frontmatter___date] }\n      ){\n      edges {\n        node {\n          excerpt(pruneLength: 320)\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexTemplate;\n"],"sourceRoot":""}