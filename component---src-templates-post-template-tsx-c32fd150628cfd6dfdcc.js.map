{"version":3,"sources":["webpack:///./src/components/Post/Content/Content.module.scss","webpack:///./node_modules/react-disqus-comments/build/main.js","webpack:///./node_modules/react-disqus-comments/build/components/DisqusThread.js","webpack:///./src/components/Post/Tags/Tags.module.scss","webpack:///./src/components/Post/Author/Author.module.scss","webpack:///./src/components/Post/Post.module.scss","webpack:///./src/components/Post/Meta/Meta.module.scss","webpack:///./src/components/Post/Author/index.ts","webpack:///./src/components/Post/Author/Author.tsx","webpack:///./src/components/Post/Comments/index.tsx","webpack:///./src/components/Post/Comments/Comments.tsx","webpack:///./src/components/Post/Content/index.ts","webpack:///./src/components/Post/Content/Content.tsx","webpack:///./src/components/Post/Meta/index.ts","webpack:///./src/components/Post/Meta/Meta.tsx","webpack:///./src/components/Post/Tags/index.ts","webpack:///./src/components/Post/Tags/Tags.tsx","webpack:///./src/components/Post/index.ts","webpack:///./src/components/Post/Post.tsx","webpack:///./src/templates/post-template.tsx"],"names":["module","exports","Object","defineProperty","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","DISQUS_CONFIG","__disqusAdded","copyProps","context","onNewComment","language","rest","keys","indexOf","_objectWithoutProperties","prop","page","callbacks","DisqusThread","_React$Component","this","__proto__","getPrototypeOf","apply","subClass","superClass","create","constructor","setPrototypeOf","_inherits","loadDisqus","nextProps","nextState","identifier","_this2","reduce","memo","some","config","_defineProperty","createElement","id","child","disqus","document","parent","getElementsByTagName","async","type","src","shortname","appendChild","_this3","forEach","DISQUS","reset","reload","url","replace","window","disqus_config","addDisqusScript","Component","displayName","propTypes","string","isRequired","title","category_id","func","defaultProps","location","href","Author","author","useSiteMetadata","className","styles","bio","getContactHref","contacts","email","rel","name","Comments","postTitle","postSlug","disqusShortname","Content","body","dangerouslySetInnerHTML","__html","Meta","date","moment","format","Tags","tags","tagSlugs","map","slug","to","Post","post","html","fields","frontmatter","query","PostTemplate","data","siteTitle","siteSubtitle","subtitle","markdownRemark","excerpt","postDescription","description","socialImage","metaDescription","Layout"],"mappings":"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","file":"component---src-templates-post-template-tsx-c32fd150628cfd6dfdcc.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content-module--content--3p512\",\"content__title\":\"Content-module--content__title--2BDW9\",\"content__body\":\"Content-module--content__body--2TrQ-\"};","'use strict';\n\nmodule.exports = require('./components/DisqusThread');","'use strict';\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.some\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment', 'language'];\nvar __disqusAdded = false;\n\nfunction copyProps(context, props) {\n  var onNewComment = props.onNewComment,\n      language = props.language,\n      rest = _objectWithoutProperties(props, ['onNewComment', 'language']);\n\n  for (var prop in rest) {\n    context.page[prop] = rest[prop];\n  } // Setting the language - if none is provided, the default one is used\n\n\n  context.language = language;\n\n  if (onNewComment) {\n    context.callbacks = {\n      onNewComment: [onNewComment]\n    };\n  }\n}\n\nvar DisqusThread = function (_React$Component) {\n  _inherits(DisqusThread, _React$Component);\n\n  function DisqusThread() {\n    _classCallCheck(this, DisqusThread);\n\n    return _possibleConstructorReturn(this, (DisqusThread.__proto__ || Object.getPrototypeOf(DisqusThread)).apply(this, arguments));\n  }\n\n  _createClass(DisqusThread, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.loadDisqus();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.loadDisqus();\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return nextProps.identifier !== this.props.identifier;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var props = Object.keys(this.props).reduce(function (memo, key) {\n        return DISQUS_CONFIG.some(function (config) {\n          return config === key;\n        }) ? memo : _extends({}, memo, _defineProperty({}, key, _this2.props[key]));\n      }, {});\n      return _react2[\"default\"].createElement('div', props, _react2[\"default\"].createElement('div', {\n        id: 'disqus_thread'\n      }));\n    }\n  }, {\n    key: 'addDisqusScript',\n    value: function addDisqusScript() {\n      if (__disqusAdded) {\n        return;\n      }\n\n      var child = this.disqus = document.createElement('script');\n      var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n      child.async = true;\n      child.type = 'text/javascript';\n      child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n      parent.appendChild(child);\n      __disqusAdded = true;\n    }\n  }, {\n    key: 'loadDisqus',\n    value: function loadDisqus() {\n      var _this3 = this;\n\n      var props = {}; // Extract Disqus props that were supplied to this component\n\n      DISQUS_CONFIG.forEach(function (prop) {\n        // prop \"shortname\" is only necessary for loading the script, not for the config itself\n        if (prop !== 'shortname' && !!_this3.props[prop]) {\n          props[prop] = _this3.props[prop];\n        }\n      }); // If Disqus has already been added, reset it\n\n      if (typeof DISQUS !== 'undefined') {\n        DISQUS.reset({\n          reload: true,\n          config: function config() {\n            copyProps(this, props); // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n\n            this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n          }\n        });\n      } else {\n        // Otherwise add Disqus to the page\n        window.disqus_config = function () {\n          copyProps(this, props);\n        };\n\n        this.addDisqusScript();\n      }\n    }\n  }]);\n\n  return DisqusThread;\n}(_react2[\"default\"].Component);\n\nDisqusThread.displayName = 'DisqusThread';\nDisqusThread.propTypes = {\n  id: _propTypes2[\"default\"].string,\n\n  /**\n   * `shortname` tells the Disqus service your forum's shortname,\n   * which is the unique identifier for your website as registered\n   * on Disqus. If undefined , the Disqus embed will not load.\n   */\n  shortname: _propTypes2[\"default\"].string.isRequired,\n\n  /**\n   * `identifier` tells the Disqus service how to identify the\n   * current page. When the Disqus embed is loaded, the identifier\n   * is used to look up the correct thread. If disqus_identifier\n   * is undefined, the page's URL will be used. The URL can be\n   * unreliable, such as when renaming an article slug or changing\n   * domains, so we recommend using your own unique way of\n   * identifying a thread.\n   */\n  identifier: _propTypes2[\"default\"].string,\n\n  /**\n   * `title` tells the Disqus service the title of the current page.\n   * This is used when creating the thread on Disqus for the first time.\n   * If undefined, Disqus will use the <title> attribute of the page.\n   * If that attribute could not be used, Disqus will use the URL of the page.\n   */\n  title: _propTypes2[\"default\"].string,\n\n  /**\n   * `url` tells the Disqus service the URL of the current page.\n   * If undefined, Disqus will take the window.location.href.\n   * This URL is used to look up or create a thread if disqus_identifier\n   * is undefined. In addition, this URL is always saved when a thread is\n   * being created so that Disqus knows what page a thread belongs to.\n   */\n  url: _propTypes2[\"default\"].string,\n\n  /**\n   * `category_id` tells the Disqus service the category to be used for\n   * the current page. This is used when creating the thread on Disqus\n   * for the first time.\n   */\n  category_id: _propTypes2[\"default\"].string,\n\n  /**\n   * `onNewComment` function accepts one parameter `comment` which is a\n   * JavaScript object with comment `id` and `text`. This allows you to track\n   * user comments and replies and run a script after a comment is posted.\n   */\n  onNewComment: _propTypes2[\"default\"].func,\n\n  /**\n   * `language` tells the Disqus service which language should be used.\n   * Please refer to https://www.transifex.com/disqus/disqus/ on which languages can be used\n   * If undefined, English is used as default one\n   */\n  language: _propTypes2[\"default\"].string\n};\nDisqusThread.defaultProps = {\n  url: typeof window === 'undefined' ? null : window.location.href\n};\nexports[\"default\"] = DisqusThread;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"Tags-module--tags--1L_ct\",\"tags__list\":\"Tags-module--tags__list--91FqN\",\"tags__list-item\":\"Tags-module--tags__list-item--1M30P\",\"tags__list-item-link\":\"Tags-module--tags__list-item-link--3SL_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"author\":\"Author-module--author--2Yefr\",\"author__bio-contact\":\"Author-module--author__bio-contact--8_j8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post__footer\":\"Post-module--post__footer--3WzWU\",\"post__comments\":\"Post-module--post__comments--25y6I\",\"post__home-button\":\"Post-module--post__home-button--16Kl0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meta__date\":\"Meta-module--meta__date--29eD7\"};","import { Author } from \"./Author\";\n\nexport default Author;\n","import React from 'react';\nimport { getContactHref } from '../../../utils';\nimport styles from './Author.module.scss';\nimport { useSiteMetadata } from '../../../hooks';\n\nexport const Author = () => {\n  const { author } = useSiteMetadata();\n\n  return (\n    <div className={styles['author']}>\n      <p className={styles['author__bio']}>\n        {author.bio}\n        <a\n          className={styles['author__bio-contact']}\n          href={getContactHref('email', author.contacts.email)}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <strong>{author.name}</strong>\n        </a>\n      </p>\n    </div>\n  );\n};\n\n","import { Comments } from \"./Comments\";\n\nexport default Comments;\n","import React from 'react';\nimport ReactDisqusComments from 'react-disqus-comments';\nimport { useSiteMetadata } from '../../../hooks';\n\ntype Props = {\n  postTitle: string,\n  postSlug: string\n};\n\nexport const Comments = ({ postTitle, postSlug }: Props) => {\n  const { url, disqusShortname } = useSiteMetadata();\n\n  if (!disqusShortname) {\n    return null;\n  }\n\n  return (\n    <ReactDisqusComments\n      shortname={disqusShortname}\n      identifier={postTitle}\n      title={postTitle}\n      url={url + postSlug}\n    />\n  );\n};\n\n","import { Content } from \"./Content\";\n\nexport default Content;\n","import React from 'react';\nimport styles from './Content.module.scss';\n\ntype Props = {\n  body: string,\n  title: string\n};\n\nexport const Content = ({ body, title }: Props) => (\n  <div className={styles['content']}>\n    <h1 className={styles['content__title']}>{title}</h1>\n    <div className={styles['content__body']} dangerouslySetInnerHTML={{ __html: body }} />\n  </div>\n);\n\n","import { Meta } from \"./Meta\";\n\nexport default Meta;\n","import React from 'react';\nimport moment from 'moment';\nimport styles from './Meta.module.scss';\n\ntype Props = {\n  date: string\n};\n\nexport const Meta = ({ date }: Props) => (\n  <div className={styles['meta']}>\n    <p className={styles['meta__date']}>Published {moment(date).format('D MMM YYYY')}</p>\n  </div>\n);\n","import { Tags } from \"./Tags\";\n\nexport default Tags;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styles from './Tags.module.scss';\n\ntype Props = {\n  tags: string[],\n  tagSlugs: string[]\n};\n\nexport const Tags = ({ tags, tagSlugs }: Props) => (\n  <div className={styles['tags']}>\n    <ul className={styles['tags__list']}>\n      {tagSlugs && tagSlugs.map((slug, i) => (\n        <li className={styles['tags__list-item']} key={tags[i]}>\n          <Link to={slug} className={styles['tags__list-item-link']}>\n            {tags[i]}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import { Post } from \"./Post\";\n\nexport default Post;\n","// @flow strict\nimport React from \"react\";\nimport { Link } from \"gatsby\";\nimport { RequiredNotNull } from \"../../types\";\nimport { MarkdownRemark, MarkdownRemarkFields, MarkdownRemarkFrontmatter } from \"../../types/graphql\";\nimport Author from \"./Author\";\nimport Comments from \"./Comments\";\nimport Content from \"./Content\";\nimport Meta from \"./Meta\";\nimport Tags from \"./Tags\";\nimport styles from \"./Post.module.scss\";\n\ntype Props = {\n  post: MarkdownRemark;\n};\n\nexport const Post = ({ post: { html, fields, frontmatter } }: Props) => {\n  const { tagSlugs, slug } = fields as RequiredNotNull<MarkdownRemarkFields>;\n  const { tags, title, date } = frontmatter as RequiredNotNull<MarkdownRemarkFrontmatter>;\n\n  return (\n    <div className={styles[\"post\"]}>\n      <Link className={styles[\"post__home-button\"]} to=\"/\">\n        All Articles\n      </Link>\n\n      <div className={styles[\"post__content\"]}>\n        <Content body={html!} title={title} />\n      </div>\n\n      <div className={styles[\"post__footer\"]}>\n        <Meta date={date} />\n        {tags && tagSlugs && <Tags tags={tags as string[]} tagSlugs={tagSlugs as string[]} />}\n        <Author />\n      </div>\n\n      <div className={styles[\"post__comments\"]}>\n        <Comments postSlug={slug} postTitle={frontmatter!.title!} />\n      </div>\n    </div>\n  );\n};\n\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Post from '../components/Post';\nimport { useSiteMetadata } from '../hooks';\nimport { RequiredNotNull } from \"../types\";\nimport { MarkdownRemark } from \"../types/graphql\";\n\ntype Props = {\n    data: {\n        markdownRemark: MarkdownRemark & RequiredNotNull<Pick<MarkdownRemark, 'frontmatter'>>\n    }\n};\n\nconst PostTemplate = ({ data }: Props) => {\n    const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\n    const { frontmatter, excerpt } = data.markdownRemark;\n    const { title: postTitle, description: postDescription, socialImage } = frontmatter;\n    const metaDescription = postDescription ? postDescription : (excerpt ? excerpt : siteSubtitle);\n\n    return (\n        <Layout title={`${postTitle} - ${siteTitle}`} description={metaDescription} socialImage={socialImage as unknown as string}>\n            <Post post={data.markdownRemark}/>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query PostBySlug($slug: String!) {\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            id\n            html\n            fields {\n                slug\n                tagSlugs\n            }\n            excerpt(pruneLength: 320)\n            frontmatter {\n                date\n                description\n                tags\n                title\n                socialImage {\n                    childImageSharp {\n                        fluid(maxWidth: 960) {\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default PostTemplate;\n"],"sourceRoot":""}