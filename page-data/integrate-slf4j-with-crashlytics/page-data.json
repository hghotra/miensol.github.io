{"componentChunkName":"component---src-templates-post-template-tsx","path":"/integrate-slf4j-with-crashlytics/","result":{"data":{"markdownRemark":{"id":"fe560503-0ba7-5dca-8fde-b9bd9bce2b84","html":"<p>As I mentioned in my previous post having meaningful log entries comes handy during development. When an app reaches beta testers as well as goes live it’s equally or even more important to be able to figure out why the app you’ve carefully coded isn’t behaving as it should. Testing the app on all android flavours is literally impossible that’s why getting an insight into what caused a crash is vital.</p>\n<h2 id=\"crashlytics\" style=\"position:relative;\"><a href=\"#crashlytics\" aria-label=\"crashlytics permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://dev.twitter.com/products/crashlytics\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Crashlytics</a></h2>\n<p>Error reporting providers are getting more and more popular. There are plenty of options to choose from: <a href=\"https://raygun.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Raygun</a>, <a href=\"https://airbrake.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Airbrake</a> and <a href=\"https://dev.twitter.com/products/crashlytics\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Crashlytics</a> are just frew examples. At <a href=\"http://brightinventions.pl/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Bright Inventions</a> we use the last one and are more and more pleased with it. Setting it up is really easy - if you don’t mind installing an IDE plugin it provides. Frankly I would prefer being able to configure a project with a simple command line tool but I understand a motivation behind it which is making the installation as seamless as possible.</p>\n<p>Crashlytics let’s you not only report <a href=\"http://developer.android.com/reference/java/lang/Thread.html#setDefaultUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">uncaught exceptions</a> but also handled errors with additional information provided by log entries:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">Crashlytics</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span>INFO<span class=\"token punctuation\">,</span> <span class=\"token string\">\"HomeActivity\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Make request\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">makeRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RuntimeException</span> ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">Crashlytics</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span>ERROR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"HomeActivity\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Error making request \"</span> <span class=\"token operator\">+</span> ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This will print messages to logcat as well as well as well as make them available in Crashlytics dashboard.</p>\n<h2 id=\"using-slf4j-with-crashlytics\" style=\"position:relative;\"><a href=\"#using-slf4j-with-crashlytics\" aria-label=\"using slf4j with crashlytics permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using <a href=\"https://github.com/bright/slf4android\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">slf4j</a> with Crashlytics</h2>\n<p>I’ve already explained why <a href=\"/introducing-slf4android.html\">I don’t like this approach to logging</a>. Thankfully with <a href=\"https://github.com/bright/slf4android\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">slf4android</a> it’s really easy to replace a default logcat appender with a <code class=\"language-text\">CrashlyticsLoggerHandler</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CrashlyticsLoggerHandler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Handler</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">MessageValueSupplier</span> messageValueSupplier <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MessageValueSupplier</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">publish</span><span class=\"token punctuation\">(</span>java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>logging<span class=\"token punctuation\">.</span><span class=\"token class-name\">LogRecord</span> record<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">LogRecord</span> logRecord <span class=\"token operator\">=</span> pl<span class=\"token punctuation\">.</span>brightinventions<span class=\"token punctuation\">.</span>slf4android<span class=\"token punctuation\">.</span><span class=\"token class-name\">LogRecord</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromRecord</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">StringBuilder</span> messageBuilder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    messageValueSupplier<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>logRecord<span class=\"token punctuation\">,</span> messageBuilder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">String</span> tag <span class=\"token operator\">=</span> record<span class=\"token punctuation\">.</span><span class=\"token function\">getLoggerName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> androidLogLevel <span class=\"token operator\">=</span> logRecord<span class=\"token punctuation\">.</span><span class=\"token function\">getLogLevel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAndroidLevel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Crashlytics</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>androidLogLevel<span class=\"token punctuation\">,</span> tag<span class=\"token punctuation\">,</span> messageBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>All that is left is to add the handler to root logger in your custom application <code class=\"language-text\">onCreate</code> method:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">LoggerConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token function\">configuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">removeRootLogcatHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">addHandlerToRootLogger</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CrashlyticsLoggerHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>From now on all log messages will go through Crashlytics API and couple of last log entries will be available next to crash report details in dashboard.</p>\n<p><em>This article is cross-posted <a href=\"http://blog.brightinventions.pl/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">my company blog</a></em></p>","fields":{"slug":"/integrate-slf4j-with-crashlytics/","tagSlugs":["/tag/android/"]},"excerpt":"As I mentioned in my previous post having meaningful log entries comes handy during development. When an app reaches beta testers as well as goes live it’s equally or even more important to be able to figure out why the app you’ve carefully coded isn’t behaving as it should. Testing the app on all android flavours is…","frontmatter":{"date":"2014-11-20T21:00:00.000Z","description":null,"tags":["android"],"title":"Integrate slf4j with Crashlytics","socialImage":null}}},"pageContext":{"slug":"/integrate-slf4j-with-crashlytics/"}}}